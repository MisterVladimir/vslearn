# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/home/vladimir/projects/insight/vslearn/vslearn/ui/main_window.ui',
# licensing of '/home/vladimir/projects/insight/vslearn/vslearn/ui/main_window.ui' applies.
#
# Created: Sat Feb 16 18:52:49 2019
#      by: pyside2-uic  running on PySide2 5.12.1
#
# WARNING! All changes made in this file will be lost!

from PySide2 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(730, 654)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.scrollbar = QtWidgets.QScrollBar(self.centralwidget)
        self.scrollbar.setEnabled(False)
        self.scrollbar.setOrientation(QtCore.Qt.Vertical)
        self.scrollbar.setObjectName("scrollbar")
        self.gridLayout.addWidget(self.scrollbar, 1, 0, 1, 1)
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setObjectName("widget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout.setSpacing(2)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.user_id_label = QtWidgets.QLabel(self.widget)
        self.user_id_label.setTextFormat(QtCore.Qt.AutoText)
        self.user_id_label.setObjectName("user_id_label")
        self.horizontalLayout.addWidget(self.user_id_label)
        self.user_id_line_edit = QtWidgets.QLineEdit(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.user_id_line_edit.sizePolicy().hasHeightForWidth())
        self.user_id_line_edit.setSizePolicy(sizePolicy)
        self.user_id_line_edit.setAutoFillBackground(False)
        self.user_id_line_edit.setText("")
        self.user_id_line_edit.setMaxLength(60)
        self.user_id_line_edit.setFrame(True)
        self.user_id_line_edit.setObjectName("user_id_line_edit")
        self.horizontalLayout.addWidget(self.user_id_line_edit)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.button_resize = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_resize.sizePolicy().hasHeightForWidth())
        self.button_resize.setSizePolicy(sizePolicy)
        self.button_resize.setMinimumSize(QtCore.QSize(0, 0))
        self.button_resize.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.button_resize.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/resize.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.button_resize.setIcon(icon)
        self.button_resize.setIconSize(QtCore.QSize(24, 24))
        self.button_resize.setFlat(True)
        self.button_resize.setObjectName("button_resize")
        self.horizontalLayout.addWidget(self.button_resize)
        self.button_zoom_in = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_zoom_in.sizePolicy().hasHeightForWidth())
        self.button_zoom_in.setSizePolicy(sizePolicy)
        self.button_zoom_in.setMinimumSize(QtCore.QSize(0, 0))
        self.button_zoom_in.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.button_zoom_in.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/magnifying_glass_zoom_in.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.button_zoom_in.setIcon(icon1)
        self.button_zoom_in.setIconSize(QtCore.QSize(24, 24))
        self.button_zoom_in.setFlat(True)
        self.button_zoom_in.setObjectName("button_zoom_in")
        self.horizontalLayout.addWidget(self.button_zoom_in)
        self.button_zoom_out = QtWidgets.QPushButton(self.widget)
        self.button_zoom_out.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/magnifying_glass_zoom_out.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.button_zoom_out.setIcon(icon2)
        self.button_zoom_out.setIconSize(QtCore.QSize(24, 24))
        self.button_zoom_out.setFlat(True)
        self.button_zoom_out.setObjectName("button_zoom_out")
        self.horizontalLayout.addWidget(self.button_zoom_out)
        self.button_accept = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_accept.sizePolicy().hasHeightForWidth())
        self.button_accept.setSizePolicy(sizePolicy)
        self.button_accept.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/accept.jpeg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.button_accept.setIcon(icon3)
        self.button_accept.setIconSize(QtCore.QSize(24, 24))
        self.button_accept.setCheckable(True)
        self.button_accept.setChecked(False)
        self.button_accept.setAutoExclusive(False)
        self.button_accept.setObjectName("button_accept")
        self.horizontalLayout.addWidget(self.button_accept)
        self.button_reject = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_reject.sizePolicy().hasHeightForWidth())
        self.button_reject.setSizePolicy(sizePolicy)
        self.button_reject.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/reject.jpeg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.button_reject.setIcon(icon4)
        self.button_reject.setIconSize(QtCore.QSize(24, 24))
        self.button_reject.setCheckable(True)
        self.button_reject.setChecked(False)
        self.button_reject.setAutoExclusive(False)
        self.button_reject.setObjectName("button_reject")
        self.horizontalLayout.addWidget(self.button_reject)
        self.button_add = QtWidgets.QPushButton(self.widget)
        self.button_add.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_add.sizePolicy().hasHeightForWidth())
        self.button_add.setSizePolicy(sizePolicy)
        self.button_add.setMinimumSize(QtCore.QSize(120, 0))
        self.button_add.setCheckable(True)
        self.button_add.setObjectName("button_add")
        self.horizontalLayout.addWidget(self.button_add)
        self.button_enter = QtWidgets.QPushButton(self.widget)
        self.button_enter.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_enter.sizePolicy().hasHeightForWidth())
        self.button_enter.setSizePolicy(sizePolicy)
        self.button_enter.setMinimumSize(QtCore.QSize(0, 0))
        self.button_enter.setObjectName("button_enter")
        self.horizontalLayout.addWidget(self.button_enter)
        self.gridLayout.addWidget(self.widget, 0, 1, 1, 1)
        self.graphics_view = WGraphicsView(self.centralwidget)
        self.graphics_view.setMouseTracking(True)
        self.graphics_view.setAcceptDrops(False)
        self.graphics_view.setDragMode(QtWidgets.QGraphicsView.RubberBandDrag)
        self.graphics_view.setTransformationAnchor(QtWidgets.QGraphicsView.AnchorUnderMouse)
        self.graphics_view.setResizeAnchor(QtWidgets.QGraphicsView.AnchorUnderMouse)
        self.graphics_view.setObjectName("graphics_view")
        self.gridLayout.addWidget(self.graphics_view, 1, 1, 1, 1)
        self.progress_bar = QtWidgets.QProgressBar(self.centralwidget)
        self.progress_bar.setMaximumSize(QtCore.QSize(16777215, 10))
        self.progress_bar.setProperty("value", 0)
        self.progress_bar.setTextVisible(False)
        self.progress_bar.setObjectName("progress_bar")
        self.gridLayout.addWidget(self.progress_bar, 2, 1, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 730, 20))
        self.menubar.setObjectName("menubar")
        self.menu_file = QtWidgets.QMenu(self.menubar)
        self.menu_file.setObjectName("menu_file")
        self.menu_preferences = QtWidgets.QMenu(self.menu_file)
        self.menu_preferences.setObjectName("menu_preferences")
        self.menu_export_bounding_boxes = QtWidgets.QMenu(self.menu_file)
        self.menu_export_bounding_boxes.setObjectName("menu_export_bounding_boxes")
        self.menu_import_from = QtWidgets.QMenu(self.menu_file)
        self.menu_import_from.setObjectName("menu_import_from")
        self.menu_help = QtWidgets.QMenu(self.menubar)
        self.menu_help.setObjectName("menu_help")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action_open_images = QtWidgets.QAction(MainWindow)
        self.action_open_images.setObjectName("action_open_images")
        self.action_bounding_box_color = QtWidgets.QAction(MainWindow)
        self.action_bounding_box_color.setObjectName("action_bounding_box_color")
        self.action_hotkeys = QtWidgets.QAction(MainWindow)
        self.action_hotkeys.setEnabled(False)
        self.action_hotkeys.setObjectName("action_hotkeys")
        self.action_to_JSON = QtWidgets.QAction(MainWindow)
        self.action_to_JSON.setObjectName("action_to_JSON")
        self.action_to_tfrecord = QtWidgets.QAction(MainWindow)
        self.action_to_tfrecord.setObjectName("action_to_tfrecord")
        self.action_from_XML = QtWidgets.QAction(MainWindow)
        self.action_from_XML.setEnabled(False)
        self.action_from_XML.setObjectName("action_from_XML")
        self.action_from_JSON = QtWidgets.QAction(MainWindow)
        self.action_from_JSON.setEnabled(False)
        self.action_from_JSON.setObjectName("action_from_JSON")
        self.action_from_tfrecord = QtWidgets.QAction(MainWindow)
        self.action_from_tfrecord.setEnabled(False)
        self.action_from_tfrecord.setObjectName("action_from_tfrecord")
        self.action_from_CSV = QtWidgets.QAction(MainWindow)
        self.action_from_CSV.setEnabled(False)
        self.action_from_CSV.setObjectName("action_from_CSV")
        self.menu_preferences.addAction(self.action_bounding_box_color)
        self.menu_preferences.addAction(self.action_hotkeys)
        self.menu_export_bounding_boxes.addAction(self.action_to_JSON)
        self.menu_export_bounding_boxes.addAction(self.action_to_tfrecord)
        self.menu_import_from.addAction(self.action_from_CSV)
        self.menu_import_from.addAction(self.action_from_JSON)
        self.menu_import_from.addAction(self.action_from_tfrecord)
        self.menu_import_from.addAction(self.action_from_XML)
        self.menu_file.addAction(self.action_open_images)
        self.menu_file.addAction(self.menu_preferences.menuAction())
        self.menu_file.addAction(self.menu_import_from.menuAction())
        self.menu_file.addAction(self.menu_export_bounding_boxes.menuAction())
        self.menubar.addAction(self.menu_file.menuAction())
        self.menubar.addAction(self.menu_help.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QObject.connect(self.button_reject, QtCore.SIGNAL("toggled(bool)"), self.button_add.setEnabled)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QtWidgets.QApplication.translate("MainWindow", "MainWindow", None, -1))
        self.user_id_label.setText(QtWidgets.QApplication.translate("MainWindow", "UserID", None, -1))
        self.button_resize.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Fit image to view window", None, -1))
        self.button_zoom_in.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Click to zoom IN image", None, -1))
        self.button_zoom_in.setShortcut(QtWidgets.QApplication.translate("MainWindow", "+", None, -1))
        self.button_zoom_out.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Click to zoom OUT image", None, -1))
        self.button_zoom_out.setShortcut(QtWidgets.QApplication.translate("MainWindow", "_", None, -1))
        self.button_accept.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Mark segmentation as \"correct\"", None, -1))
        self.button_accept.setShortcut(QtWidgets.QApplication.translate("MainWindow", "1", None, -1))
        self.button_reject.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Click to enter image editing mode", None, -1))
        self.button_reject.setShortcut(QtWidgets.QApplication.translate("MainWindow", "2", None, -1))
        self.button_add.setText(QtWidgets.QApplication.translate("MainWindow", "ADD RECTANGLE", None, -1))
        self.button_add.setShortcut(QtWidgets.QApplication.translate("MainWindow", "3", None, -1))
        self.button_enter.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Accept this image/data pair & go to next", None, -1))
        self.button_enter.setText(QtWidgets.QApplication.translate("MainWindow", "ENTER", None, -1))
        self.button_enter.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Return", None, -1))
        self.menu_file.setTitle(QtWidgets.QApplication.translate("MainWindow", "File", None, -1))
        self.menu_preferences.setTitle(QtWidgets.QApplication.translate("MainWindow", "Preferences", None, -1))
        self.menu_export_bounding_boxes.setTitle(QtWidgets.QApplication.translate("MainWindow", "Export to...", None, -1))
        self.menu_import_from.setTitle(QtWidgets.QApplication.translate("MainWindow", "Import from...", None, -1))
        self.menu_help.setTitle(QtWidgets.QApplication.translate("MainWindow", "Help", None, -1))
        self.action_open_images.setText(QtWidgets.QApplication.translate("MainWindow", "Open images...", None, -1))
        self.action_open_images.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+O", None, -1))
        self.action_bounding_box_color.setText(QtWidgets.QApplication.translate("MainWindow", "Bounding Box Color", None, -1))
        self.action_hotkeys.setText(QtWidgets.QApplication.translate("MainWindow", "Hotkeys...", None, -1))
        self.action_to_JSON.setText(QtWidgets.QApplication.translate("MainWindow", "JSON", None, -1))
        self.action_to_tfrecord.setText(QtWidgets.QApplication.translate("MainWindow", "Tensorflow Record", None, -1))
        self.action_from_XML.setText(QtWidgets.QApplication.translate("MainWindow", "XML", None, -1))
        self.action_from_JSON.setText(QtWidgets.QApplication.translate("MainWindow", "JSON", None, -1))
        self.action_from_tfrecord.setText(QtWidgets.QApplication.translate("MainWindow", "Tensorflow Record", None, -1))
        self.action_from_tfrecord.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Load bounding boxes from inference", None, -1))
        self.action_from_CSV.setText(QtWidgets.QApplication.translate("MainWindow", "CSV", None, -1))

from vslearn.promoted import WGraphicsView
from vslearn import resource_rc

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

